{"version":3,"sources":["Context/BillContext.js","Components/AddBill/AddBill.js","Components/BillList/BillList.js","Components/BillTotal/BillTotal.js","Components/BillOptions/BillOptions.js","Components/EditBills/EditBills.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["BillContext","createContext","AddBill","useState","newBillTitle","setNewBillTitle","newBillCost","setNewBillCost","updateBills","useContext","className","placeholder","type","value","onChange","e","target","onClick","costValid","Number","parseFloat","split","find","char","billObjectValid","title","monthlyCost","enabled","BillList","bills","editBill","setEditModeEnabled","map","bill","index","key","checked","BillTotal","selectedCostInterval","moneyIntervalTransform","cost","reduce","acc","val","toFixed","BillOptions","setSelectedCostInterval","innerText","EditBills","deleteBill","billIndex","App","editModeEnabled","Boolean","window","location","hostname","match","ReactDOM","render","children","setBills","useEffect","JSON","parse","localStorage","getItem","alphabeticalOrder","sort","a","b","toUpperCase","Provider","updatedBills","setItem","stringify","billToUpdate","billsFiltered","filter","billToDelete","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f38f2940.chunk.js","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\n\nconst BillContext = createContext();\n\nconst BillProvider = ({children}) => {\n\n  const [bills, setBills] = useState([]);\n  const [selectedCostInterval, setSelectedCostInterval] = useState('Monthly');\n  const [editModeEnabled, setEditModeEnabled] = useState(false);\n\n  useEffect(() => {\n    setBills(JSON.parse(localStorage.getItem('portexe-bills')) || []);\n  }, [setBills]);\n\n  const updateBills = (bill) => {\n    const updatedBills =  alphabeticalOrder([\n      ...bills,\n      bill\n    ]);\n    localStorage.setItem('portexe-bills', JSON.stringify(updatedBills));\n    setBills(updatedBills);\n  };\n\n  const alphabeticalOrder = (bills) => {\n    return bills.sort((a,b) => \n      a.title.toUpperCase() < b.title.toUpperCase() ? -1 : 0);\n  };\n\n  const editBill = (billToUpdate) => {\n    const billsFiltered = bills.filter((bill) => bill.title !== billToUpdate.title);\n    const updatedBills = alphabeticalOrder([\n      ...billsFiltered,\n      billToUpdate\n    ]);\n    localStorage.setItem('portexe-bills', JSON.stringify(updatedBills));\n    setBills(updatedBills);\n  };\n\n  const deleteBill = (billToDelete) => {\n    const updatedBills = bills.filter((bill) => bill.title !== billToDelete.title);\n    localStorage.setItem('portexe-bills', JSON.stringify(updatedBills));\n    setBills(updatedBills);\n  };\n\n  return(\n    <BillContext.Provider value={{\n      bills,\n      updateBills,\n      editBill,\n      selectedCostInterval,\n      setSelectedCostInterval,\n      setEditModeEnabled,\n      editModeEnabled,\n      deleteBill\n    }}>\n      {children}\n    </BillContext.Provider>\n  );\n};\n\nexport {\n  BillContext,\n  BillProvider\n};","import React, { useContext, useState } from 'react';\nimport './style.css';\nimport { BillContext } from '../../Context/BillContext';\n\nconst AddBill = () => {\n\n  const [newBillTitle, setNewBillTitle] = useState('');\n  const [newBillCost, setNewBillCost] = useState('');\n\n  const { updateBills } = useContext(BillContext);\n\n  const billObjectValid = () => {\n    // newBillCost is truthy and is a number\n    const costValid = newBillCost && Number.parseFloat(newBillCost);\n\n    // newBillTitle is truthy and not only whitespace characters\n    const titleValid = newBillTitle && newBillTitle.split('').find(char => char !== ' ');\n    return titleValid && costValid;\n  };\n  const clearForm = () => {\n    setNewBillCost('');\n    setNewBillTitle('');\n  };\n\n  return (\n    <div className='add-bill-container'>\n      <input className='add-bill-form-control form-control'\n        placeholder='Enter bill title'\n        type='text'\n        value={newBillTitle}\n        onChange={(e) => setNewBillTitle(e.target.value)}></input>\n      <input className='add-bill-form-control form-control'\n        placeholder='Enter bill monthly cost'\n        type='number'\n        value={newBillCost}\n        onChange={(e) => setNewBillCost(e.target.value)}></input>\n      <button className='add-bill-form-control btn btn-primary'\n        onClick={() => {\n          if(billObjectValid()) {\n            updateBills({\n              title: newBillTitle,\n              monthlyCost: newBillCost,\n              enabled: true\n            });\n            clearForm();\n          }\n        }}>Add Bill</button>\n    </div>\n  );\n};\n\nexport default AddBill;","import React, { useContext } from 'react';\nimport './style.css';\nimport { BillContext } from '../../Context/BillContext';\n\nconst BillList = () => {\n\n  const { bills, editBill, setEditModeEnabled } = useContext(BillContext);\n\n  return (\n    <div className='bill-list-container'>\n      <h6 className='edit-mode-btn' onClick={() => setEditModeEnabled(true)}>Edit</h6>\n      {\n        bills.map((bill, index) => {\n          return(\n            <div key={index} className='bill-list-row'>\n              <input type='checkbox'\n                className='form-check-input'\n                checked={bill.enabled}\n                onChange={() => editBill({\n                  title: bill.title,\n                  monthlyCost: bill.monthlyCost,\n                  enabled: !bill.enabled\n                })}>\n              </input>\n              <div className='bill-list-row-content'>\n                {bill.title} - ${bill.monthlyCost}\n              </div>\n            </div>\n          );\n        })\n      }\n    </div>\n  );\n};\n\nexport default BillList;","import React, { useContext } from 'react';\nimport './style.css';\nimport { BillContext } from '../../Context/BillContext';\n\nconst BillTotal = () => {\n\n  const { bills, selectedCostInterval } = useContext(BillContext);\n\n  const moneyIntervalTransform = (cost) => {\n    const monthlyCost = Number.parseFloat(cost);\n    switch (selectedCostInterval) {\n      case 'Monthly':\n        return monthlyCost;\n\n      case 'Yearly':\n        return monthlyCost * 12;\n\n      case 'Weekly':\n        return monthlyCost * 12 / 52;\n\n      case 'Daily':\n        return monthlyCost * 12 / 365;\n    \n      default:\n        return 0;\n    }\n  };\n\n  return (\n    <>\n      <div className='bill-total-container'>\n        {selectedCostInterval} bill cost:\n        <span className='total-cost'>\n          {\n            '$' + bills.reduce((acc, val) => {\n              return val.enabled ?\n              moneyIntervalTransform(val.monthlyCost) + acc :\n              acc;\n            }, 0).toFixed(2)\n          }\n        </span>\n      </div>\n      <div className='total-saved-container'>\n        {selectedCostInterval} saved:\n        <span className='total-saved'>\n          {\n            '$' + bills.reduce((acc, val) => {\n              return !val.enabled ?\n              moneyIntervalTransform(val.monthlyCost) + acc:\n              acc;\n            }, 0).toFixed(2)\n          }\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default BillTotal;","import React, { useContext } from 'react';\nimport './style.css';\nimport { BillContext } from '../../Context/BillContext';\n\nconst BillOptions = () => {\n\n  const { selectedCostInterval, setSelectedCostInterval } = useContext(BillContext);\n\n  return (\n    <div className='interval-option-container'>\n      <div className={selectedCostInterval === 'Daily' ? 'selected-interval' : 'interval'}\n        onClick={(e) => setSelectedCostInterval(e.target.innerText)}>\n        Daily\n      </div>\n      <div className={selectedCostInterval === 'Monthly' ? 'selected-interval' : 'interval'}\n        onClick={(e) => setSelectedCostInterval(e.target.innerText)}>\n        Monthly\n      </div>\n      <div className={selectedCostInterval === 'Yearly' ? 'selected-interval' : 'interval'}\n        onClick={(e) => setSelectedCostInterval(e.target.innerText)}>\n        Yearly\n      </div>\n    </div>\n  );\n};\n\nexport default BillOptions;","import React, { useContext } from 'react';\nimport './style.css';\nimport { BillContext } from '../../Context/BillContext';\n\nconst EditBills = () => {\n\n  const { bills, setEditModeEnabled, editBill, deleteBill } = useContext(BillContext);\n\n  return (\n    <div className='edit-bill-container'>\n      <h6 className='edit-mode-done-btn' onClick={() => setEditModeEnabled(false)}>\n        Done\n      </h6>\n      {\n        bills.map((bill, billIndex) => {\n          return(\n            <div key={billIndex} className='edit-bill-row'>\n              <div className='edit-bill-row-content'>\n                <div className='edit-bill-title'>{bill.title}</div>\n                <input className='edit-bill-cost-input'\n                  type='number'\n                  value={bill.monthlyCost}\n                  onChange={(e) => editBill({\n                    title: bill.title,\n                    enabled: bill.enabled,\n                    monthlyCost: e.target.value\n                  })}></input>\n                  <h6 onClick={() => deleteBill(bill)} className='delete-button'>DELETE</h6>\n              </div>\n              <hr></hr>\n            </div>\n          );\n        })\n      }\n    </div>\n  );\n};\n\nexport default EditBills;","import React, { useContext } from 'react';\nimport './App.css';\nimport AddBill from '../AddBill/AddBill';\nimport { BillContext } from '../../Context/BillContext';\nimport BillList from '../BillList/BillList';\nimport BillTotal from '../BillTotal/BillTotal';\nimport BillOptions from '../BillOptions/BillOptions';\nimport EditBills from '../EditBills/EditBills';\n\nconst App = () => {\n\n  const { editModeEnabled } = useContext(BillContext);\n\n  return (\n    <div className='bills-container'>\n      {\n        editModeEnabled ? <EditBills /> : <span><BillOptions /><AddBill /><BillTotal /><BillList /></span>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport { BillProvider } from './Context/BillContext';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BillProvider><App /></BillProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}